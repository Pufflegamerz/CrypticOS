; Will generate NASM x86 assembly when
; given CINS as input.
; Self hosted compiler, up to 27 labels

; Initialization
#ifndef X85
prt "SECTION .text"
prt 10
prt "GLOBAL _start"
prt 10
prt "_start:"
prt 10
#end

prt "MOV ECX,B" ; We will always be printing to ECX (bottom)
prt 10
prt "MOV ESI,T"

var c 0 ; Holds current char
var label 'A' ; Holds the label character

top:
	prt 10
	got c
	inl ","
	
	equ c 0 end ; end of line
	equ c '.' dot
	equ c ',' comma
	equ c '>' bracketRight
	equ c '<' bracketLeft
	equ c 'd' de
	equ c 'a' ay
	equ c '+' plus
	equ c '-' minus
	equ c '%' percent
	equ c '*' asterisk
	equ c '!' reset
	equ c '^' up
	equ c 'v' down
	equ c '$' goto
	equ c '?' compare

	equ c '|' label
jmp top

; Very basic instructions,
; Self-explainatory.

dot:
	#ifndef X86
	prt "MOV EAX,4"
	prt 10
	prt "MOV EBX,1"
	prt 10
	prt "MOV EDX,1"
	prt 10
	prt "INT 128"
	#end
jmp top

comma:
	#ifndef X86
	prt "MOV EAX,3" ; sys_read
	prt 10
	prt "MOV EBX,1" ; stdin
	prt 10
	prt "MOV EDX,2" ; input 2 char (one for enter)
	prt 10
	prt "int 128"
	#end
jmp top

bracketRight:
	prt "INC ECX"
jmp top

bracketLeft:
	prt "DEC ECX"
jmp top

de:
	prt "INC ESI"
jmp top

ay:
	prt "DEC ESI"
jmp top

plus:
	prt "INC BYTE [ECX]"
jmp top

minus:
	prt "DEC BYTE [ECX]"
jmp top

percent:
	prt "ADD BYTE [ECX],50"
jmp top

asterisk:
	prt "ADD BYTE [ECX],5"
jmp top

reset:
	prt "MOV BYTE [ECX],0"
jmp top

up:
	prt "MOV AL,[ECX]"
	prt 10
	prt "MOV [ESI],AL"
jmp top

down:
	prt "MOV AL,[ESI]"
	prt 10
	prt "MOV [ECX],AL"
jmp top

; More complicated instructions
; compiled here

label:
	prt "L" ; label c
	prt label
	prt ":"
	add label 1
jmp top

goto:
	prt "JMP G"
jmp top

compare:
	prt "MOV AL,[ESI+1]"
	prt 10
	prt "MOV AH,[ESI+2]"
	prt 10
	prt "CMP AL,AH"
	prt 10
	prt "JE G"
jmp top

end:

; Linux Kernel end signal (0x80)
prt "MOV EAX,1"
prt 10
prt "INT 128"
prt 10

; Map Labels though A-Z alphabet

prt "G:"
prt 10
prt "MOV AL,[ESI]"
prt 10
prt "ADD AL,65"
prt 10

label_top:
	equ label 'A' label_end
	sub label 1

	; Print:
	; CMP EAX, 'A'
	; JE LA
	prt "CMP AL,'"
	prt label
	prt "'"
	prt 10
	prt "JE L"
	prt label
	prt 10

	jmp label_top
label_end:

prt "SECTION .bss"
prt 10
prt "T RESB 50"
prt 10
prt "B RESB 1000"
